{"hierarchy":{"paths":[["doc:\/\/Navigator\/documentation\/Navigator"]]},"relationshipsSections":[{"type":"inheritsFrom","kind":"relationships","identifiers":["doc:\/\/Navigator\/SQ","doc:\/\/Navigator\/SH","doc:\/\/Navigator\/s12IdentifiableP"],"title":"Inherits From"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/navigator\/navigationdestination"]}],"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"NavigationDestination"},{"text":" : ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Identifiable","preciseIdentifier":"s:s12IdentifiableP"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"text":"NavigationDestination types can be used in order to push and present views as needed.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can happen using…"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Standard SwiftUI modifiers like "},{"code":"NavigationLink(value:label:)","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Imperatively by asking a ","type":"text"},{"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/Navigator","type":"reference","isActive":true},{"type":"text","text":" to perform the desired action."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Or via a deep link action enabled by a ","type":"text"},{"type":"reference","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationURLHandler","isActive":true},{"text":".","type":"text"}]}]}]},{"inlineContent":[{"type":"text","text":"They’re one of the core elements that make Navigator possible."}],"type":"paragraph"},{"text":"Defining Navigation Destinations","level":3,"anchor":"Defining-Navigation-Destinations","type":"heading"},{"inlineContent":[{"type":"text","text":"Destinations are typically just a simple list of enumerated values."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["public enum HomeDestinations {","    case page2","    case page3","    case pageN(Int)","}"]},{"inlineContent":[{"type":"text","text":"Along with an extension that provides the correct view for a specific case."}],"type":"paragraph"},{"code":["extension HomeDestinations: NavigationDestination {","    public var view: some View {","        switch self {","        case .page2:","            HomePage2View()","        case .page3:","            HomePage3View()","        case .pageN(let value):","            HomePageNView(number: value)","        }","    }","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Note how associated values can be used to pass parameters to views as needed.","type":"text"}]},{"text":"Using Navigation Destinations","level":3,"anchor":"Using-Navigation-Destinations","type":"heading"},{"inlineContent":[{"text":"This can be done via using a standard SwiftUI ","type":"text"},{"type":"codeVoice","code":"NavigationLink(value:label:)"},{"text":" view.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["NavigationLink(value: HomeDestinations.page3) {","    Text(\"Link to Home Page 3!\")","}"],"syntax":"swift"},{"inlineContent":[{"text":"Or imperatively by asking a Navigator to perform the desired action.","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["Button(\"Button Navigate to Home Page 55\") {","    navigator.navigate(to: HomeDestinations.pageN(55))","}"]},{"anchor":"Registering-Navigation-Destinations","level":3,"type":"heading","text":"Registering Navigation Destinations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Like traditional "},{"code":"NavigationStack","type":"codeVoice"},{"text":" destination types, ","type":"text"},{"type":"codeVoice","code":"NavigationDestination"},{"text":" types need to be registered with the enclosing","type":"text"},{"type":"text","text":" "},{"type":"text","text":"navigation stack in order for standard "},{"code":"NavigationLink(value:label:)","type":"codeVoice"},{"type":"text","text":" transitions to work correctly."}]},{"inlineContent":[{"type":"text","text":"But since each "},{"code":"NavigationDestination","type":"codeVoice"},{"type":"text","text":" already defines the view to be provided, registering destination types can be done"},{"type":"text","text":" "},{"type":"text","text":"using a simple one-line view modifier."}],"type":"paragraph"},{"code":["ManagedNavigationStack {","    HomeView()","        .navigationDestination(HomeDestinations.self)","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"This also makes using the same destination type with more than one navigation stack a lot easier."}],"type":"paragraph"},{"anchor":"Navigation-Methods","type":"heading","level":3,"text":"Navigation Methods"},{"inlineContent":[{"type":"codeVoice","code":"NavigationDestination"},{"text":" can also be extended to provide a distinct ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationMethod"},{"type":"text","text":" for each enumerated type."}],"type":"paragraph"},{"syntax":"swift","code":["extension HomeDestinations: NavigationDestination {","    public var method: NavigationMethod {","        switch self {","        case .page3:","            .sheet","        default:","            .push","        }","    }","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"In this case, should ","type":"text"},{"code":"navigator.navigate(to: HomeDestinations.page3)","type":"codeVoice"},{"text":" be called, Navigator will automatically present that view in a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"sheet. All other views will be pushed onto the navigation stack."}]},{"content":[{"inlineContent":[{"text":"When using ","type":"text"},{"type":"codeVoice","code":"NavigationLink(value:label:)"},{"type":"text","text":" the method will be ignored and SwiftUI will push"},{"type":"text","text":" "},{"type":"text","text":"the value onto the navigation stack as it would normally."}],"type":"paragraph"}],"name":"Important","style":"important","type":"aside"}]}],"metadata":{"role":"symbol","title":"NavigationDestination","modules":[{"name":"Navigator"}],"symbolKind":"protocol","roleHeading":"Protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"NavigationDestination","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"NavigationDestination"}],"externalID":"s:9Navigator21NavigationDestinationP"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Provides enumerated navigation types than can be translated into Views.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination"},"topicSections":[{"identifiers":["doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/Content"],"title":"Associated Types","anchor":"Associated-Types","generated":true},{"title":"Instance Properties","identifiers":["doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/method-9mqf1","doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/receiveResumeType-8bwb3","doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/view"],"anchor":"Instance-Properties","generated":true},{"identifiers":["doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/asAnyView()","doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/callAsFunction()"],"title":"Instance Methods","anchor":"Instance-Methods","generated":true}],"references":{"doc://Navigator/documentation/Navigator/NavigationDestination":{"url":"\/documentation\/navigator\/navigationdestination","title":"NavigationDestination","abstract":[{"type":"text","text":"Provides enumerated navigation types than can be translated into Views."}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NavigationDestination","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"NavigationDestination"}],"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination"},"doc://Navigator/documentation/Navigator/NavigationURLHandler":{"url":"\/documentation\/navigator\/navigationurlhandler","role":"symbol","abstract":[{"text":"Provides Deep Linking support.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"NavigationURLHandler","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationURLHandler","title":"NavigationURLHandler","navigatorTitle":[{"kind":"identifier","text":"NavigationURLHandler"}],"type":"topic"},"doc://Navigator/documentation/Navigator/NavigationDestination/Content":{"role":"symbol","type":"topic","title":"Content","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Content"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/Content","kind":"symbol","url":"\/documentation\/navigator\/navigationdestination\/content","abstract":[],"required":true},"doc://Navigator/documentation/Navigator":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Navigator\/documentation\/Navigator","url":"\/documentation\/navigator","role":"collection","abstract":[{"text":"Managed NavigationStacks for SwiftUI.","type":"text"}],"title":"Navigator"},"doc://Navigator/SH":{"type":"unresolvable","identifier":"doc:\/\/Navigator\/SH","title":"Swift.Hashable"},"doc://Navigator/documentation/Navigator/NavigationDestination/method-9mqf1":{"title":"method","url":"\/documentation\/navigator\/navigationdestination\/method-9mqf1","required":true,"role":"symbol","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/method-9mqf1","abstract":[{"text":"Can be overridden to define a specific presentation type for each destination.","type":"text"}],"defaultImplementations":1,"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"method"},{"kind":"text","text":": "},{"text":"NavigationMethod","kind":"typeIdentifier","preciseIdentifier":"s:9Navigator16NavigationMethodO"}],"kind":"symbol","type":"topic"},"doc://Navigator/s12IdentifiableP":{"type":"unresolvable","identifier":"doc:\/\/Navigator\/s12IdentifiableP","title":"Swift.Identifiable"},"doc://Navigator/documentation/Navigator/NavigationMethod":{"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationMethod","title":"NavigationMethod","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NavigationMethod","kind":"identifier"}],"url":"\/documentation\/navigator\/navigationmethod","abstract":[{"type":"text","text":"Defines the desired presentation mechanism for a given "},{"code":"NavigationDestination","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"NavigationMethod"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://Navigator/documentation/Navigator/NavigationDestination/receiveResumeType-8bwb3":{"url":"\/documentation\/navigator\/navigationdestination\/receiveresumetype-8bwb3","type":"topic","defaultImplementations":1,"title":"receiveResumeType","required":true,"abstract":[{"text":"Can be overridden to define a specific send resume type for each destination.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/receiveResumeType-8bwb3","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"receiveResumeType"},{"kind":"text","text":": "},{"text":"NavigationReceiveResumeType","kind":"typeIdentifier","preciseIdentifier":"s:9Navigator27NavigationReceiveResumeTypeO"}],"role":"symbol"},"doc://Navigator/documentation/Navigator/NavigationDestination/view":{"title":"view","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"view"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Content","kind":"typeIdentifier","preciseIdentifier":"s:9Navigator21NavigationDestinationP7ContentQa"}],"url":"\/documentation\/navigator\/navigationdestination\/view","type":"topic","required":true,"kind":"symbol","abstract":[{"type":"text","text":"Provides the correct view for a specific case."}],"role":"symbol","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/view"},"doc://Navigator/SQ":{"type":"unresolvable","identifier":"doc:\/\/Navigator\/SQ","title":"Swift.Equatable"},"doc://Navigator/documentation/Navigator/NavigationDestination/callAsFunction()":{"abstract":[{"text":"Convenience function returns view.","type":"text"}],"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/callAsFunction()","kind":"symbol","title":"callAsFunction()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"text":"() -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/navigator\/navigationdestination\/callasfunction()"},"doc://Navigator/documentation/Navigator/Navigator":{"url":"\/documentation\/navigator\/navigator","title":"Navigator","abstract":[{"type":"text","text":"Every ManagedNavigationStack has a Navigator to manage it."}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Navigator","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Navigator"}],"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/Navigator"},"doc://Navigator/documentation/Navigator/NavigationDestination/asAnyView()":{"abstract":[{"type":"text","text":"Convenience function returns AnyView."}],"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/asAnyView()","kind":"symbol","title":"asAnyView()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asAnyView"},{"kind":"text","text":"() -> "},{"text":"AnyView","preciseIdentifier":"s:7SwiftUI7AnyViewV","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/navigator\/navigationdestination\/asanyview()"}}}