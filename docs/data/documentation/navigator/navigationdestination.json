{"abstract":[{"type":"text","text":"Provides enumerated navigation types than can be translated into Views."}],"relationshipsSections":[{"identifiers":["doc:\/\/Navigator\/SQ","doc:\/\/Navigator\/SH","doc:\/\/Navigator\/s12IdentifiableP"],"title":"Inherits From","type":"inheritsFrom","kind":"relationships"}],"variants":[{"paths":["\/documentation\/navigator\/navigationdestination"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"NavigationDestination"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SH","kind":"typeIdentifier","text":"Hashable"},{"kind":"text","text":", "},{"text":"Identifiable","kind":"typeIdentifier","preciseIdentifier":"s:s12IdentifiableP"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"NavigationDestination types can be used in order to push and present views as needed.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can happen using…"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Standard SwiftUI modifiers like ","type":"text"},{"type":"codeVoice","code":"NavigationLink(value:label:)"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Imperatively by asking a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/Navigator"},{"type":"text","text":" to perform the desired action."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Or via a deep link action enabled by a ","type":"text"},{"type":"reference","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationURLHander","isActive":true},{"text":".","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"They’re one of the core elements that make Navigator possible.","type":"text"}],"type":"paragraph"},{"anchor":"Defining-Navigation-Destinations","text":"Defining Navigation Destinations","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Destinations are typically just a simple list of enumerated values.","type":"text"}]},{"syntax":"swift","code":["public enum HomeDestinations {","    case page2","    case page3","    case pageN(Int)","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Along with an extension that provides the correct view for a specific case.","type":"text"}]},{"type":"codeListing","code":["extension HomeDestinations: NavigationDestination {","    public var view: some View {","        switch self {","        case .page2:","            HomePage2View()","        case .page3:","            HomePage3View()","        case .pageN(let value):","            HomePageNView(number: value)","        }","    }","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Note how associated values can be used to pass parameters to views as needed."}],"type":"paragraph"},{"anchor":"Using-Navigation-Destinations","text":"Using Navigation Destinations","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be done via using a standard SwiftUI "},{"type":"codeVoice","code":"NavigationLink(value:label:)"},{"type":"text","text":" view."}]},{"type":"codeListing","syntax":"swift","code":["NavigationLink(value: HomeDestinations.page3) {","    Text(\"Link to Home Page 3!\")","}"]},{"inlineContent":[{"text":"Or imperatively by asking a Navigator to perform the desired action.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["Button(\"Button Navigate to Home Page 55\") {","    navigator.navigate(to: HomeDestinations.pageN(55))","}"],"type":"codeListing"},{"level":3,"anchor":"Registering-Navigation-Destinations","type":"heading","text":"Registering Navigation Destinations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Like traditional "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" destination types, "},{"type":"codeVoice","code":"NavigationDestination"},{"text":" types need to be registered with the enclosing","type":"text"},{"text":" ","type":"text"},{"text":"navigation stack in order for standard ","type":"text"},{"type":"codeVoice","code":"NavigationLink(value:label:)"},{"type":"text","text":" transitions to work correctly."}]},{"type":"paragraph","inlineContent":[{"text":"But since each ","type":"text"},{"code":"NavigationDestination","type":"codeVoice"},{"text":" already defines the view to be provided, registering destination types can be done","type":"text"},{"text":" ","type":"text"},{"text":"using a simple one-line view modifier.","type":"text"}]},{"code":["ManagedNavigationStack {","    HomeView()","        .navigationDestination(HomeDestinations.self)","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This also makes using the same destination type with more than one navigation stack a lot easier."}]},{"level":3,"anchor":"Navigation-Methods","type":"heading","text":"Navigation Methods"},{"inlineContent":[{"code":"NavigationDestination","type":"codeVoice"},{"text":" can also be extended to provide a distinct ","type":"text"},{"type":"reference","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationMethod","isActive":true},{"type":"text","text":" for each enumerated type."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["extension HomeDestinations: NavigationDestination {","    public var method: NavigationMethod {","        switch self {","        case .page3:","            .sheet","        default:","            .push","        }","    }","}"]},{"inlineContent":[{"type":"text","text":"In this case, should "},{"code":"navigator.navigate(to: HomeDestinations.page3)","type":"codeVoice"},{"type":"text","text":" be called, Navigator will automatically present that view in a"},{"type":"text","text":" "},{"text":"sheet. All other views will be pushed onto the navigation stack.","type":"text"}],"type":"paragraph"},{"name":"Important","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When using "},{"code":"NavigationLink(value:label:)","type":"codeVoice"},{"type":"text","text":" the method will be ignored and SwiftUI will push"},{"text":" ","type":"text"},{"text":"the value onto the navigation stack as it would normally.","type":"text"}]}],"type":"aside"}],"kind":"content"}],"identifier":{"url":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/Content"],"generated":true,"anchor":"Associated-Types","title":"Associated Types"},{"anchor":"Instance-Properties","title":"Instance Properties","generated":true,"identifiers":["doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/method-9mqf1","doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/view"]},{"anchor":"Instance-Methods","identifiers":["doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/asAnyView()","doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/callAsFunction()"],"generated":true,"title":"Instance Methods"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Navigator\/documentation\/Navigator"]]},"metadata":{"role":"symbol","title":"NavigationDestination","roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NavigationDestination","kind":"identifier"}],"externalID":"s:9Navigator21NavigationDestinationP","modules":[{"name":"Navigator"}],"symbolKind":"protocol","navigatorTitle":[{"text":"NavigationDestination","kind":"identifier"}]},"references":{"doc://Navigator/documentation/Navigator/NavigationDestination/view":{"url":"\/documentation\/navigator\/navigationdestination\/view","required":true,"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/view","kind":"symbol","type":"topic","title":"view","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"view","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:9Navigator21NavigationDestinationP7ContentQa","text":"Content","kind":"typeIdentifier"}],"abstract":[{"text":"Provides the correct view for a specific case.","type":"text"}],"role":"symbol"},"doc://Navigator/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/Navigator\/SQ"},"doc://Navigator/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/Navigator\/SH"},"doc://Navigator/documentation/Navigator/NavigationDestination/method-9mqf1":{"type":"topic","defaultImplementations":1,"url":"\/documentation\/navigator\/navigationdestination\/method-9mqf1","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/method-9mqf1","abstract":[{"text":"Can be overridden to define a specific presentation type for each destination.","type":"text"}],"required":true,"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"method","kind":"identifier"},{"text":": ","kind":"text"},{"text":"NavigationMethod","kind":"typeIdentifier","preciseIdentifier":"s:9Navigator16NavigationMethodO"}],"title":"method","role":"symbol","kind":"symbol"},"doc://Navigator/documentation/Navigator":{"kind":"symbol","url":"\/documentation\/navigator","title":"Navigator","abstract":[{"text":"Managed NavigationStacks for SwiftUI.","type":"text"}],"identifier":"doc:\/\/Navigator\/documentation\/Navigator","role":"collection","type":"topic"},"doc://Navigator/documentation/Navigator/NavigationDestination/callAsFunction()":{"kind":"symbol","abstract":[{"type":"text","text":"Convenience function returns view."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"callAsFunction","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"title":"callAsFunction()","type":"topic","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/callAsFunction()","url":"\/documentation\/navigator\/navigationdestination\/callasfunction()","role":"symbol"},"doc://Navigator/documentation/Navigator/NavigationDestination/asAnyView()":{"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/asAnyView()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asAnyView"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7AnyViewV","text":"AnyView"}],"title":"asAnyView()","type":"topic","url":"\/documentation\/navigator\/navigationdestination\/asanyview()","kind":"symbol","abstract":[{"type":"text","text":"Convenience function returns AnyView."}],"role":"symbol"},"doc://Navigator/documentation/Navigator/NavigationDestination":{"url":"\/documentation\/navigator\/navigationdestination","kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NavigationDestination"}],"title":"NavigationDestination","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NavigationDestination"}],"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination","abstract":[{"type":"text","text":"Provides enumerated navigation types than can be translated into Views."}]},"doc://Navigator/documentation/Navigator/Navigator":{"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/Navigator","navigatorTitle":[{"text":"Navigator","kind":"identifier"}],"url":"\/documentation\/navigator\/navigator","abstract":[{"text":"Every ManagedNavigationStack has a Navigator to manage it.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Navigator"}],"role":"symbol","title":"Navigator","type":"topic","kind":"symbol"},"doc://Navigator/documentation/Navigator/NavigationMethod":{"abstract":[{"type":"text","text":"Defines the desired presentation mechanism for a given "},{"type":"codeVoice","code":"NavigationDestination"},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"NavigationMethod"}],"kind":"symbol","url":"\/documentation\/navigator\/navigationmethod","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationMethod","title":"NavigationMethod","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"NavigationMethod","kind":"identifier"}],"type":"topic"},"doc://Navigator/documentation/Navigator/NavigationURLHander":{"title":"NavigationURLHander","url":"\/documentation\/navigator\/navigationurlhander","kind":"symbol","abstract":[{"text":"Provides Deep Linking support.","type":"text"}],"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationURLHander","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NavigationURLHander","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"NavigationURLHander","kind":"identifier"}]},"doc://Navigator/s12IdentifiableP":{"type":"unresolvable","title":"Swift.Identifiable","identifier":"doc:\/\/Navigator\/s12IdentifiableP"},"doc://Navigator/documentation/Navigator/NavigationDestination/Content":{"url":"\/documentation\/navigator\/navigationdestination\/content","abstract":[],"title":"Content","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Content"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/Content","kind":"symbol","type":"topic","role":"symbol"}}}