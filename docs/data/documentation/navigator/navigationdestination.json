{"abstract":[{"type":"text","text":"Provides enumerated navigation types than can be translated into Views."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","metadata":{"title":"NavigationDestination","modules":[{"name":"Navigator"}],"navigatorTitle":[{"kind":"identifier","text":"NavigationDestination"}],"symbolKind":"protocol","role":"symbol","roleHeading":"Protocol","externalID":"s:9Navigator21NavigationDestinationP","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NavigationDestination","kind":"identifier"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NavigationDestination"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SH","kind":"typeIdentifier","text":"Hashable"},{"kind":"text","text":", "},{"text":"Identifiable","kind":"typeIdentifier","preciseIdentifier":"s:s12IdentifiableP"}]}]},{"content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"type":"text","text":"NavigationDestination types can be used in order to push and present views as needed."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"This can happen using…","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Standard SwiftUI modifiers like ","type":"text"},{"type":"codeVoice","code":"NavigationLink(value:label:)"},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Imperatively by asking a ","type":"text"},{"type":"reference","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/Navigator","isActive":true},{"type":"text","text":" to perform the desired action."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Or via a deep link action enabled by a "},{"type":"reference","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationURLHander","isActive":true},{"type":"text","text":"."}]}]}]},{"type":"paragraph","inlineContent":[{"text":"They’re one of the core elements that make Navigator possible.","type":"text"}]},{"text":"Defining Navigation Destinations","anchor":"Defining-Navigation-Destinations","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Destinations are typically just a simple list of enumerated values."}]},{"type":"codeListing","code":["public enum HomeDestinations {","    case page2","    case page3","    case pageN(Int)","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Along with an extension that provides the correct view for a specific case.","type":"text"}]},{"code":["extension HomeDestinations: NavigationDestination {","    public var view: some View {","        switch self {","        case .page2:","            HomePage2View()","        case .page3:","            HomePage3View()","        case .pageN(let value):","            HomePageNView(number: value)","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Note how associated values can be used to pass parameters to views as needed."}],"type":"paragraph"},{"anchor":"Using-Navigation-Destinations","text":"Using Navigation Destinations","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"This can be done via using a standard SwiftUI "},{"code":"NavigationLink(value:label:)","type":"codeVoice"},{"type":"text","text":" view."}],"type":"paragraph"},{"code":["NavigationLink(value: HomeDestinations.page3) {","    Text(\"Link to Home Page 3!\")","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Or imperatively by asking a Navigator to perform the desired action.","type":"text"}],"type":"paragraph"},{"code":["Button(\"Button Navigate to Home Page 55\") {","    navigator.navigate(to: HomeDestinations.pageN(55))","}"],"type":"codeListing","syntax":"swift"},{"anchor":"Registering-Navigation-Destinations","text":"Registering Navigation Destinations","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Like traditional "},{"type":"codeVoice","code":"NavigationStack"},{"text":" destination types, ","type":"text"},{"code":"NavigationDestination","type":"codeVoice"},{"text":" types need to be registered with the enclosing","type":"text"},{"type":"text","text":" "},{"type":"text","text":"navigation stack in order for standard "},{"code":"NavigationLink(value:label:)","type":"codeVoice"},{"type":"text","text":" transitions to work correctly."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"But since each "},{"code":"NavigationDestination","type":"codeVoice"},{"text":" already defines the view to be provided, registering destination types can be done","type":"text"},{"type":"text","text":" "},{"type":"text","text":"using a simple one-line view modifier."}]},{"code":["ManagedNavigationStack {","    HomeView()","        .navigationDestination(HomeDestinations.self)","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"This also makes using the same destination type with more than one navigation stack a lot easier."}],"type":"paragraph"},{"level":3,"text":"Navigation Methods","type":"heading","anchor":"Navigation-Methods"},{"type":"paragraph","inlineContent":[{"code":"NavigationDestination","type":"codeVoice"},{"text":" can also be extended to provide a distinct ","type":"text"},{"type":"reference","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationMethod","isActive":true},{"text":" for each enumerated type.","type":"text"}]},{"syntax":"swift","code":["extension HomeDestinations: NavigationDestination {","    public var method: NavigationMethod {","        switch self {","        case .page3:","            .sheet","        default:","            .push","        }","    }","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"In this case, should "},{"type":"codeVoice","code":"navigator.navigate(to: HomeDestinations.page3)"},{"text":" be called, Navigator will automatically present that view in a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"sheet. All other views will be pushed onto the navigation stack."}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"When using "},{"code":"NavigationLink(value:label:)","type":"codeVoice"},{"type":"text","text":" the method will be ignored and SwiftUI will push"},{"type":"text","text":" "},{"type":"text","text":"the value onto the navigation stack as it would normally."}],"type":"paragraph"}],"type":"aside","name":"Important","style":"important"}],"kind":"content"}],"sections":[],"relationshipsSections":[{"title":"Inherits From","type":"inheritsFrom","identifiers":["doc:\/\/Navigator\/SQ","doc:\/\/Navigator\/SH","doc:\/\/Navigator\/s12IdentifiableP"],"kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/Navigator\/documentation\/Navigator"]]},"topicSections":[{"anchor":"Associated-Types","title":"Associated Types","identifiers":["doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/Content"],"generated":true},{"identifiers":["doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/method-9mqf1","doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/view"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"},{"anchor":"Instance-Methods","identifiers":["doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/asAnyView()","doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/callAsFunction()"],"generated":true,"title":"Instance Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/navigator\/navigationdestination"]}],"identifier":{"url":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination","interfaceLanguage":"swift"},"references":{"doc://Navigator/documentation/Navigator":{"identifier":"doc:\/\/Navigator\/documentation\/Navigator","abstract":[{"type":"text","text":"Managed NavigationStacks for SwiftUI."}],"url":"\/documentation\/navigator","title":"Navigator","kind":"symbol","role":"collection","type":"topic"},"doc://Navigator/documentation/Navigator/NavigationDestination/view":{"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/view","title":"view","abstract":[{"type":"text","text":"Provides the correct view for a specific case."}],"type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"view"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:9Navigator21NavigationDestinationP7ContentQa","text":"Content"}],"url":"\/documentation\/navigator\/navigationdestination\/view","role":"symbol","required":true},"doc://Navigator/documentation/Navigator/NavigationDestination":{"abstract":[{"text":"Provides enumerated navigation types than can be translated into Views.","type":"text"}],"title":"NavigationDestination","role":"symbol","url":"\/documentation\/navigator\/navigationdestination","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"NavigationDestination","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"NavigationDestination"}],"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination","kind":"symbol","type":"topic"},"doc://Navigator/documentation/Navigator/NavigationURLHander":{"title":"NavigationURLHander","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NavigationURLHander","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"NavigationURLHander","kind":"identifier"}],"abstract":[{"type":"text","text":"Provides Deep Linking support."}],"kind":"symbol","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationURLHander","url":"\/documentation\/navigator\/navigationurlhander"},"doc://Navigator/documentation/Navigator/NavigationDestination/asAnyView()":{"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/asAnyView()","url":"\/documentation\/navigator\/navigationdestination\/asanyview()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asAnyView"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7SwiftUI7AnyViewV","text":"AnyView","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Convenience function returns AnyView."}],"title":"asAnyView()"},"doc://Navigator/documentation/Navigator/Navigator":{"url":"\/documentation\/navigator\/navigator","kind":"symbol","type":"topic","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/Navigator","abstract":[{"text":"Every ManagedNavigationStack has a Navigator to manage it.","type":"text"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Navigator","kind":"identifier"}],"title":"Navigator","navigatorTitle":[{"text":"Navigator","kind":"identifier"}]},"doc://Navigator/documentation/Navigator/NavigationMethod":{"title":"NavigationMethod","url":"\/documentation\/navigator\/navigationmethod","type":"topic","abstract":[{"text":"Defines the desired presentation mechanism for a given ","type":"text"},{"code":"NavigationDestination","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"NavigationMethod","kind":"identifier"}],"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationMethod","kind":"symbol","navigatorTitle":[{"text":"NavigationMethod","kind":"identifier"}],"role":"symbol"},"doc://Navigator/documentation/Navigator/NavigationDestination/method-9mqf1":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"method"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9Navigator16NavigationMethodO","text":"NavigationMethod"}],"type":"topic","url":"\/documentation\/navigator\/navigationdestination\/method-9mqf1","defaultImplementations":1,"abstract":[{"type":"text","text":"Can be overridden to define a specific presentation type for each destination."}],"kind":"symbol","title":"method","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/method-9mqf1","required":true},"doc://Navigator/SH":{"identifier":"doc:\/\/Navigator\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://Navigator/SQ":{"identifier":"doc:\/\/Navigator\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://Navigator/documentation/Navigator/NavigationDestination/callAsFunction()":{"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/callAsFunction()","url":"\/documentation\/navigator\/navigationdestination\/callasfunction()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"() -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Convenience function returns view."}],"title":"callAsFunction()"},"doc://Navigator/documentation/Navigator/NavigationDestination/Content":{"url":"\/documentation\/navigator\/navigationdestination\/content","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Content","kind":"identifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"title":"Content","abstract":[],"required":true,"kind":"symbol","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination\/Content"},"doc://Navigator/s12IdentifiableP":{"type":"unresolvable","identifier":"doc:\/\/Navigator\/s12IdentifiableP","title":"Swift.Identifiable"}}}