{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/navigator\/navigator\/send(_:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"send"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"values","kind":"internalParam"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":"...)"}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"This is the core functionality behind deep linking support in Navigator.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The primary difference between this and ","type":"text"},{"type":"codeVoice","code":"navigate(to:)"},{"type":"text","text":" is that you don’t need to know what navigator is handling"},{"type":"text","text":" "},{"type":"text","text":"the request, nor does the value need to be of type "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"They just need to be "},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"heading","level":3,"text":"Sending Values","anchor":"Sending-Values"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following code broadcasts a list of actions to be handled somewhere in the application. First it selects the Home tab,"},{"text":" ","type":"text"},{"type":"text","text":"then navigates to Page 2."}]},{"syntax":"swift","code":["Button(\"Go To Tab Home, Page 2\") {","    navigator.send(","        RootTabs.home,","        HomeDestinations.page2","    )","}"],"type":"codeListing"},{"anchor":"Receiving-Values","text":"Receiving Values","level":3,"type":"heading"},{"inlineContent":[{"text":"Receiving values is simple. Just register a receive handler for the desired type.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":[".onNavigationReceive { (tab: RootTabs) in","    if tab == selectedTab {","        return .immediately","    }","    selectedTab = tab","    return .auto","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"And then perform whatever action is needed on receipt."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Here’s the handler for "},{"code":"HomeDestinations","type":"codeVoice"},{"type":"text","text":".`"}],"type":"paragraph"},{"code":[".onNavigationReceive { (destination: HomeDestinations, navigator) in","    navigator.navigate(to: destination)","    return .auto","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Speaking of which, receive handlers return a value of type "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationReceiveResumeType"},{"type":"text","text":", which tells Navigator how to"},{"text":" ","type":"text"},{"type":"text","text":"process the remaining values in the queue. Additional values can be paused, cancelled, or simply processed normally."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that there should be one and only one registered handler for a given type in the navigation tree. If more than"},{"text":" ","type":"text"},{"text":"one exists the first handler will consume the value and the remaining handlers should be ignored.","type":"text"}]}]}],"metadata":{"modules":[{"name":"Navigator"}],"extendedModule":"Navigator","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"send","kind":"identifier"},{"text":"(any ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"text":"...)","kind":"text"}],"externalID":"s:9NavigatorAAV4sendyySH_pd_tF","roleHeading":"Instance Method","role":"symbol","title":"send(_:)"},"hierarchy":{"paths":[["doc:\/\/Navigator\/documentation\/Navigator","doc:\/\/Navigator\/documentation\/Navigator\/Navigator"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Navigator\/documentation\/Navigator\/Navigator\/send(_:)"},"abstract":[{"type":"text","text":"Sends a value or values to navigation receivers throughout the application."}],"sections":[],"kind":"symbol","references":{"doc://Navigator/documentation/Navigator/NavigationDestination":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NavigationDestination"}],"navigatorTitle":[{"kind":"identifier","text":"NavigationDestination"}],"abstract":[{"text":"Provides enumerated navigation types than can be translated into Views.","type":"text"}],"type":"topic","kind":"symbol","title":"NavigationDestination","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination","url":"\/documentation\/navigator\/navigationdestination","role":"symbol"},"doc://Navigator/documentation/Navigator/Navigator/send(_:)":{"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/Navigator\/send(_:)","role":"symbol","abstract":[{"text":"Sends a value or values to navigation receivers throughout the application.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"send","kind":"identifier"},{"text":"(any ","kind":"text"},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"title":"send(_:)","url":"\/documentation\/navigator\/navigator\/send(_:)","type":"topic","kind":"symbol"},"doc://Navigator/documentation/Navigator/NavigationReceiveResumeType":{"kind":"symbol","abstract":[],"role":"symbol","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationReceiveResumeType","title":"NavigationReceiveResumeType","navigatorTitle":[{"kind":"identifier","text":"NavigationReceiveResumeType"}],"url":"\/documentation\/navigator\/navigationreceiveresumetype","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NavigationReceiveResumeType","kind":"identifier"}]},"doc://Navigator/documentation/Navigator/Navigator":{"navigatorTitle":[{"text":"Navigator","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Navigator"}],"title":"Navigator","abstract":[{"text":"Every ManagedNavigationStack has a Navigator to manage it.","type":"text"}],"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/Navigator","role":"symbol","kind":"symbol","url":"\/documentation\/navigator\/navigator"},"doc://Navigator/documentation/Navigator":{"identifier":"doc:\/\/Navigator\/documentation\/Navigator","role":"collection","title":"Navigator","url":"\/documentation\/navigator","kind":"symbol","type":"topic","abstract":[{"text":"Managed NavigationStacks for SwiftUI.","type":"text"}]}}}