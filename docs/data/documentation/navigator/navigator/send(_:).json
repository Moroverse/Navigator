{"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","preciseIdentifier":"s:ScM","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"values","kind":"internalParam"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:SH","kind":"typeIdentifier","text":"Hashable"},{"text":"...)","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is the core functionality behind deep linking support in Navigator."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The primary difference between this and "},{"code":"navigate(to:)","type":"codeVoice"},{"type":"text","text":" is that you don’t need to know what navigator is handling"},{"type":"text","text":" "},{"text":"the request, nor does the value need to be of type ","type":"text"},{"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination","isActive":true,"type":"reference"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"They just need to be "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}]},{"level":3,"anchor":"Sending-Values","type":"heading","text":"Sending Values"},{"inlineContent":[{"text":"The following code broadcasts a list of actions to be handled somewhere in the application. First it selects the Home tab,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"then navigates to Page 2."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["Button(\"Go To Tab Home, Page 2\") {","    navigator.send(","        RootTabs.home,","        HomeDestinations.page2","    )","}"]},{"text":"Receiving Values","type":"heading","anchor":"Receiving-Values","level":3},{"type":"paragraph","inlineContent":[{"text":"Receiving values is simple. Just register a receive handler for the desired type.","type":"text"}]},{"syntax":"swift","code":[".onNavigationReceive { (tab: RootTabs) in","    if tab == selectedTab {","        return .immediately","    }","    selectedTab = tab","    return .auto","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"And then perform whatever action is needed on receipt."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Here’s the handler for ","type":"text"},{"type":"codeVoice","code":"HomeDestinations"},{"text":".`","type":"text"}]},{"type":"codeListing","syntax":"swift","code":[".onNavigationReceive { (destination: HomeDestinations, navigator) in","    navigator.navigate(to: destination)","    return .auto","}"]},{"inlineContent":[{"type":"text","text":"Speaking of which, receive handlers return a value of type "},{"type":"reference","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationReceiveResumeType","isActive":true},{"type":"text","text":", which tells Navigator how to"},{"type":"text","text":" "},{"type":"text","text":"process the remaining values in the queue. Additional values can be paused, cancelled, or simply processed normally."}],"type":"paragraph"},{"inlineContent":[{"text":"Note that there should be one and only one registered handler for a given type in the navigation tree. If more than","type":"text"},{"type":"text","text":" "},{"text":"one exists the first handler will consume the value and the remaining handlers should be ignored.","type":"text"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/navigator\/navigator\/send(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Sends a value or values to navigation receivers throughout the application."}],"hierarchy":{"paths":[["doc:\/\/Navigator\/documentation\/Navigator","doc:\/\/Navigator\/documentation\/Navigator\/Navigator"]]},"metadata":{"externalID":"s:9NavigatorAAV4sendyySH_pd_tF","role":"symbol","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"send"},{"text":"(any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"text":"...)","kind":"text"}],"title":"send(_:)","extendedModule":"Navigator","modules":[{"name":"Navigator"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Navigator\/documentation\/Navigator\/Navigator\/send(_:)"},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","references":{"doc://Navigator/documentation/Navigator/Navigator/send(_:)":{"url":"\/documentation\/navigator\/navigator\/send(_:)","title":"send(_:)","abstract":[{"type":"text","text":"Sends a value or values to navigation receivers throughout the application."}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"text":"(any ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"text":"...)","kind":"text"}],"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/Navigator\/send(_:)"},"doc://Navigator/documentation/Navigator/NavigationReceiveResumeType":{"navigatorTitle":[{"kind":"identifier","text":"NavigationReceiveResumeType"}],"url":"\/documentation\/navigator\/navigationreceiveresumetype","role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NavigationReceiveResumeType","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationReceiveResumeType","title":"NavigationReceiveResumeType"},"doc://Navigator/documentation/Navigator/NavigationDestination":{"url":"\/documentation\/navigator\/navigationdestination","title":"NavigationDestination","abstract":[{"type":"text","text":"Provides enumerated navigation types than can be translated into Views."}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NavigationDestination","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"NavigationDestination"}],"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination"},"doc://Navigator/documentation/Navigator":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Navigator\/documentation\/Navigator","url":"\/documentation\/navigator","role":"collection","abstract":[{"text":"Managed NavigationStacks for SwiftUI.","type":"text"}],"title":"Navigator"},"doc://Navigator/documentation/Navigator/Navigator":{"url":"\/documentation\/navigator\/navigator","title":"Navigator","abstract":[{"type":"text","text":"Every ManagedNavigationStack has a Navigator to manage it."}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Navigator","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Navigator"}],"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/Navigator"}}}