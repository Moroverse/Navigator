{"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Overview","text":"Overview","level":2},{"inlineContent":[{"type":"text","text":"While one can programmatically pop and dismiss their way out of a screen, that approach is problematic and fragile. One could pass bindings down the tree, but that can be equally problematic at worst, and cumbersome at best."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Fortunately, Navigator supports checkpoints; named points in the navigation stack to which one can easily return."}]},{"level":2,"type":"heading","text":"Examples","anchor":"Examples"},{"level":3,"text":"Defining a Checkpoint","anchor":"Defining-a-Checkpoint","type":"heading"},{"inlineContent":[{"type":"text","text":"Checkpoints are easy to define and use. Let’s create one called “home”."}],"type":"paragraph"},{"code":["extension NavigationCheckpoint {","    public static let home: NavigationCheckpoint = \"myApp.home\"","}"],"type":"codeListing","syntax":"swift"},{"type":"heading","text":"Establishing a Checkpoint","anchor":"Establishing-a-Checkpoint","level":3},{"type":"paragraph","inlineContent":[{"text":"Now lets attach that checkpoint to our home view.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["struct RootHomeView: View {","    var body: some View {","        ManagedNavigationStack(scene: \"home\") {","            HomeContentView(title: \"Home Navigation\")","                .navigationCheckpoint(.home)","                .navigationDestination(HomeDestinations.self)","        }","    }","}"]},{"text":"Returning to a Checkpoint","type":"heading","level":3,"anchor":"Returning-to-a-Checkpoint"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once defined, they’re easy to use."}]},{"type":"codeListing","code":["Button(\"Return To Checkpoint Home\") {","    navigator.returnToCheckpoint(.home)","}",".disabled(!navigator.canReturnToCheckpoint(.home))"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When fired, checkpoints will dismiss any presented screens and pop any pushed views to return exactly where desired."}]},{"type":"heading","level":2,"text":"Advanced Checkpoints","anchor":"Advanced-Checkpoints"},{"anchor":"Returning-values-to-a-Checkpoint","level":3,"type":"heading","text":"Returning values to a Checkpoint"},{"inlineContent":[{"type":"text","text":"Checkpoints can also be used to return values to a caller."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"First we establish our checkpoint, but also adding a handler that receives a specific value type.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ Define a checkpoint with a value handler.",".navigationCheckpoint(.settings) { (result: Int?) in","    returnValue = result","}"]},{"inlineContent":[{"type":"text","text":"And then later on when we’re ready to return we call "},{"code":"returnToCheckpoint","type":"codeVoice"},{"type":"text","text":" as usual, but in this case passing our return value as well."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["\/\/ Return, passing a value.","Button(\"Return to Settings Checkpoint Passing Value 5\") {","    navigator.returnToCheckpoint(.settings, value: 5)","}"]},{"inlineContent":[{"type":"text","text":"This comes in handy when enabling state restoration in our navigation system, especially since view bindings and callback closures can’t be persisted to external storage."}],"type":"paragraph"},{"name":"Important","style":"important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value types specified in the handler and sent by the return function must match. If they don’t then the handler will not be called."}]}]},{"inlineContent":[{"text":"Checkpoints are a powerful tool. Use them.","type":"text"}],"type":"paragraph"}]}],"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Navigator\/documentation\/Navigator\/Checkpoints"},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"modules":[{"name":"Navigator"}],"title":"Checkpoints","roleHeading":"Article","role":"article"},"hierarchy":{"paths":[["doc:\/\/Navigator\/documentation\/Navigator"]]},"sections":[],"seeAlsoSections":[{"title":"The Basics","generated":true,"anchor":"The-Basics","identifiers":["doc:\/\/Navigator\/documentation\/Navigator\/Destinations"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/navigator\/checkpoints"]}],"abstract":[{"text":"Navigation Checkpoints allow one to return to a specific waypoint in the navigation tree.","type":"text"}],"references":{"doc://Navigator/documentation/Navigator/Destinations":{"abstract":[{"text":"All navigation in Navigator is accomplished using enumerated values that conform to the NavigationDestination protocol.","type":"text"}],"title":"Destinations","type":"topic","kind":"article","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/Destinations","role":"article","url":"\/documentation\/navigator\/destinations"},"doc://Navigator/documentation/Navigator":{"title":"Navigator","abstract":[{"text":"Managed NavigationStacks for SwiftUI.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Navigator\/documentation\/Navigator","url":"\/documentation\/navigator","role":"collection"}}}