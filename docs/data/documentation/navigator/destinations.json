{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Navigator\/documentation\/Navigator\/Destinations"},"metadata":{"role":"article","roleHeading":"Article","title":"Destinations","modules":[{"name":"Navigator"}]},"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","anchor":"Overview","text":"Overview"},{"inlineContent":[{"text":"NavigationDestination types can be used in order to push and present views as needed.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can happen using…"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Standard SwiftUI modifiers like NavigationLink(value:label:)."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Imperatively by asking a Navigator to perform the desired action.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Or via a deep link action enabled by a NavigationURLHander."}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"They’re one of the core elements that make Navigator possible, and they give us the separation of concerns we mentioned earlier."}],"type":"paragraph"},{"type":"heading","text":"Defining Navigation Destinations","anchor":"Defining-Navigation-Destinations","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Destinations (or routes) are typically just public lists of enumerated values, one for each view desired."}]},{"syntax":"swift","type":"codeListing","code":["public enum HomeDestinations {","    case page2","    case page3","    case pageN(Int)","}"]},{"inlineContent":[{"type":"text","text":"SwiftUI requires navigation destination values to be "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":", and so do we. That conformance, however, is satisfied by"},{"text":" ","type":"text"},{"type":"text","text":"conforming to the protocol NavigationDestination as shown next."}],"type":"paragraph"},{"level":3,"text":"Defining Destination Views","anchor":"Defining-Destination-Views","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Defining our destination views is easy, since NavigationDestination actually conforms to the View protocol!","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"As such, we just extend our destination with a view body that returns the correct view for each case."}]},{"syntax":"swift","code":["extension HomeDestinations: NavigationDestination {","    public var body: some View {","        switch self {","        case .page2:","            HomePage2View()","        case .page3:","            HomePage3View()","        case .pageN(let value):","            HomePageNView(number: value)","        }","    }","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"This is a powerful technique that lets Navigator easily create our views whenever or wherever needed. That could be via "},{"type":"codeVoice","code":"NavigationLink(value:label)"},{"text":", or presented via a sheet or fullscreen cover.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note how associated values can be used to pass parameters to views as needed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"*To build more complex views that have external dependencies or that require access to environmental values, see "},{"type":"reference","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/AdvancedDestinations","isActive":true},{"text":".","type":"text"}]},{"level":3,"type":"heading","text":"Registering Navigation Destinations","anchor":"Registering-Navigation-Destinations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Like traditional "},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":" destination types, "},{"code":"NavigationDestination","type":"codeVoice"},{"type":"text","text":" types need to be registered with the enclosing"},{"type":"text","text":" "},{"text":"navigation stack in order for ","type":"text"},{"code":"navigate(to:)","type":"codeVoice"},{"type":"text","text":" presentations and standard "},{"type":"codeVoice","code":"NavigationLink(value:label:)"},{"type":"text","text":" transitions"},{"type":"text","text":" "},{"text":"to work correctly.","type":"text"}]},{"inlineContent":[{"type":"text","text":"But since each "},{"code":"NavigationDestination","type":"codeVoice"},{"type":"text","text":" already defines the views to be provided, registering destination types can be done"},{"type":"text","text":" "},{"text":"using a simple one-line view modifier.","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["ManagedNavigationStack {","    HomeView()","        .navigationDestination(HomeDestinations.self)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This also makes using the same destination type with more than one navigation stack a lot easier."}]},{"type":"paragraph","inlineContent":[{"type":"emphasis","inlineContent":[{"text":"Note that registering types more than once in the same NavigationStack isn’t recommended and Navigator will in fact warn you if it see multiple registrations of the same type.","type":"text"}]}]},{"type":"heading","text":"Using Navigation Destinations","anchor":"Using-Navigation-Destinations","level":3},{"inlineContent":[{"type":"text","text":"With that out of the way, Navigation Destinations can be dispatched using a standard SwiftUI "},{"type":"codeVoice","code":"NavigationLink(value:label:)"},{"type":"text","text":" view."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["NavigationLink(value: HomeDestinations.page3) {","    Text(\"Link to Home Page 3!\")","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or they can be dispatched declaratively using modifiers."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Sample using optional destination","@State var page: SettingsDestinations?","...","Button(\"Modifier Navigate to Page 3!\") {","    page = .page3","}",".navigate(to: $page)","","\/\/ Sample using trigger value","@State var triggerPage3: Bool = false","...","Button(\"Modifier Trigger Page 3!\") {","    triggerPage3.toggle()","}",".navigate(trigger: $triggerPage3, destination: SettingsDestinations.page3)"]},{"type":"paragraph","inlineContent":[{"text":"Or imperatively by asking a Navigator to perform the desired action.","type":"text"}]},{"type":"codeListing","code":["@Environment(\\.navigator) var navigator: Navigator","...","Button(\"Button Push Home Page 55\") {","    navigator.push(HomeDestinations.pageN(55))","}","Button(\"Button Navigate To Home Page 55\") {","    navigator.navigate(to: HomeDestinations.pageN(55))","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"In case you’re wondering, calling ","type":"text"},{"code":"push","type":"codeVoice"},{"type":"text","text":" pushes the associate view onto the current "},{"code":"NavigationStack","type":"codeVoice"},{"text":", while ","type":"text"},{"type":"codeVoice","code":"Navigate(to:)"},{"text":" will push","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the view or present the view, based on the "},{"code":"NavigationMethod","type":"codeVoice"},{"type":"text","text":" specified."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Speaking of which…"}]},{"text":"Navigation Methods","type":"heading","anchor":"Navigation-Methods","level":3},{"type":"paragraph","inlineContent":[{"code":"NavigationDestination","type":"codeVoice"},{"text":" can be extended to provide a distinct ","type":"text"},{"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationMethod","isActive":true,"type":"reference"},{"text":" for each enumerated type.","type":"text"}]},{"code":["extension HomeDestinations: NavigationDestination {","    public var method: NavigationMethod {","        switch self {","        case .page3:","            .sheet","        default:","            .push","        }","    }","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this case, should "},{"code":"navigator.navigate(to: HomeDestinations.page3)","type":"codeVoice"},{"type":"text","text":" be called, Navigator will automatically present that view in a"},{"text":" ","type":"text"},{"text":"sheet. All other views will be pushed onto the navigation stack.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The current navigation methods are: .push (default), .sheet, .cover, and .send.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Predefined methods can be overridden using Navigator’s "},{"type":"codeVoice","code":"navigate(to:method:)"},{"text":" function.","type":"text"}]},{"code":["Button(\"Present Home Page 55 Via Sheet\") {","    navigator.navigate(to: HomeDestinations.pageN(55), method: .sheet)","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"Note that NavigationDestinations dispatched via NavigationLink will ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"always"}]},{"type":"text","text":" push onto the NavigationStack. That’s just how SwiftUI works."}],"type":"paragraph"},{"type":"heading","level":2,"text":"Values, Not Destinations","anchor":"Values-Not-Destinations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Navigator is designed to work with "},{"isActive":true,"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination","type":"reference"},{"type":"text","text":" types and SwiftUI’s "},{"code":"NavigationLink(value:label:)","type":"codeVoice"},{"type":"text","text":"; not "},{"code":"NavigationLink(destination:label:)","type":"codeVoice"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"Mixing the two on the same ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"text":" can lead to unexpected behavior, and using ","type":"text"},{"type":"codeVoice","code":"NavigationLink(destination:label:)"},{"text":" at all can affect programatic navigation using Navigators.","type":"text"}],"type":"paragraph"},{"code":["\/\/ DO","NavigationLink(value: HomeDestinations.page3) {","    Text(\"Link to Home Page 3!\")","}","","\/\/ DON'T DO","NavigationLink(destination: HomePage3View()) {","    Text(\"Link to Home Page 3!\")","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you start seeing odd behavior returning to previous views, check to make sure a "},{"type":"codeVoice","code":"NavigationLink(destination:label:)"},{"text":" link hasn’t worked its way into your code.","type":"text"}]},{"type":"aside","style":"important","content":[{"inlineContent":[{"type":"text","text":"Use NavigationDestination values. Avoid using "},{"code":"NavigationLink(destination:label:)","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"Important"}]}],"hierarchy":{"paths":[["doc:\/\/Navigator\/documentation\/Navigator"]]},"variants":[{"paths":["\/documentation\/navigator\/destinations"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"All navigation in Navigator is accomplished using enumerated values that conform to the NavigationDestination protocol."}],"seeAlsoSections":[{"anchor":"Related-Documentation","identifiers":["doc:\/\/Navigator\/documentation\/Navigator\/AdvancedDestinations"],"title":"Related Documentation"},{"identifiers":["doc:\/\/Navigator\/documentation\/Navigator\/NavigationTree","doc:\/\/Navigator\/documentation\/Navigator\/Checkpoints","doc:\/\/Navigator\/documentation\/Navigator\/Dismissible"],"generated":true,"title":"The Basics","anchor":"The-Basics"}],"sections":[],"kind":"article","schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Navigator/documentation/Navigator/NavigationTree":{"title":"Understanding The Navigation Tree","url":"\/documentation\/navigator\/navigationtree","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationTree","abstract":[{"type":"text","text":"To get the most out of Navigator you need to understand the navigation tree where its Navigators live."}],"role":"article","type":"topic","kind":"article"},"doc://Navigator/documentation/Navigator":{"url":"\/documentation\/navigator","abstract":[{"text":"Managed NavigationStacks for SwiftUI.","type":"text"}],"title":"Navigator","role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/Navigator\/documentation\/Navigator"},"doc://Navigator/documentation/Navigator/AdvancedDestinations":{"type":"topic","abstract":[{"type":"text","text":"Building NavigationDestinations that access the environment and other use cases"}],"role":"article","title":"Advanced Destinations","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/AdvancedDestinations","kind":"article","url":"\/documentation\/navigator\/advanceddestinations"},"doc://Navigator/documentation/Navigator/NavigationDestination":{"title":"NavigationDestination","url":"\/documentation\/navigator\/navigationdestination","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationDestination","navigatorTitle":[{"kind":"identifier","text":"NavigationDestination"}],"abstract":[{"text":"Provides enumerated navigation types than can be translated into Views.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"NavigationDestination","kind":"identifier"}],"type":"topic","kind":"symbol"},"doc://Navigator/documentation/Navigator/NavigationMethod":{"url":"\/documentation\/navigator\/navigationmethod","title":"NavigationMethod","kind":"symbol","identifier":"doc:\/\/Navigator\/documentation\/Navigator\/NavigationMethod","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NavigationMethod","kind":"identifier"}],"abstract":[{"text":"Defines the desired presentation mechanism for a given ","type":"text"},{"code":"NavigationDestination","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"NavigationMethod"}],"role":"symbol"},"doc://Navigator/documentation/Navigator/Checkpoints":{"title":"Checkpoints","type":"topic","role":"article","kind":"article","abstract":[{"type":"text","text":"Navigation Checkpoints allow one to return to a specific waypoint in the navigation tree."}],"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/Checkpoints","url":"\/documentation\/navigator\/checkpoints"},"doc://Navigator/documentation/Navigator/Dismissible":{"role":"article","title":"Dismissible Views","kind":"article","url":"\/documentation\/navigator\/dismissible","type":"topic","abstract":[{"type":"text","text":"Understanding dismissible views and their role in application navigation and deep linking."}],"identifier":"doc:\/\/Navigator\/documentation\/Navigator\/Dismissible"}}}