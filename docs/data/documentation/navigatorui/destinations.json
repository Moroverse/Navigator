{"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/navigatorui\/destinations"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/NavigatorUI\/documentation\/NavigatorUI"]]},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"NavigationDestination types can be used in order to push and present views as needed."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This can happen using…"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Standard SwiftUI modifiers like NavigationLink(value:label:).","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Imperatively by asking a Navigator to perform the desired action.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Or via a deep link action enabled by a NavigationURLHander.","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"They’re one of the core elements that make Navigator possible, and they give us the separation of concerns we mentioned earlier.","type":"text"}]},{"type":"heading","anchor":"Defining-Navigation-Destinations","level":3,"text":"Defining Navigation Destinations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Destinations (or routes) are typically just public lists of enumerated values, one for each view desired."}]},{"type":"codeListing","syntax":"swift","code":["public enum HomeDestinations {","    case page2","    case page3","    case pageN(Int)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUI requires navigation destination values to be "},{"type":"codeVoice","code":"Hashable"},{"text":", and so do we. That conformance, however, is satisfied by","type":"text"},{"type":"text","text":" "},{"type":"text","text":"conforming to the protocol NavigationDestination as shown next."}]},{"type":"heading","anchor":"Defining-Destination-Views","level":3,"text":"Defining Destination Views"},{"inlineContent":[{"type":"text","text":"Defining our destination views is easy, since NavigationDestination actually conforms to the View protocol!"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As such, we just extend our destination with a view body that returns the correct view for each case."}]},{"type":"codeListing","syntax":"swift","code":["extension HomeDestinations: NavigationDestination {","    public var body: some View {","        switch self {","        case .page2:","            HomePage2View()","        case .page3:","            HomePage3View()","        case .pageN(let value):","            HomePageNView(number: value)","        }","    }","}"]},{"inlineContent":[{"text":"This is a powerful technique that lets Navigator easily create our views whenever or wherever needed. That could be via ","type":"text"},{"type":"codeVoice","code":"NavigationLink(value:label)"},{"text":", or presented via a sheet or fullscreen cover.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Note how associated values can be used to pass parameters to views as needed."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"*To build more complex views that have external dependencies or that require access to environmental values, see "},{"isActive":true,"type":"reference","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/AdvancedDestinations"},{"type":"text","text":"."}]},{"text":"Registering Navigation Destinations","type":"heading","anchor":"Registering-Navigation-Destinations","level":3},{"type":"paragraph","inlineContent":[{"text":"Like traditional ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" destination types, "},{"type":"codeVoice","code":"NavigationDestination"},{"type":"text","text":" types need to be registered with the enclosing"},{"type":"text","text":" "},{"text":"navigation stack in order for ","type":"text"},{"type":"codeVoice","code":"navigate(to:)"},{"type":"text","text":" presentations and standard "},{"type":"codeVoice","code":"NavigationLink(value:label:)"},{"type":"text","text":" transitions"},{"text":" ","type":"text"},{"type":"text","text":"to work correctly."}]},{"inlineContent":[{"type":"text","text":"But since each "},{"type":"codeVoice","code":"NavigationDestination"},{"type":"text","text":" already defines the views to be provided, registering destination types can be done"},{"type":"text","text":" "},{"text":"using a simple one-line view modifier.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["ManagedNavigationStack {","    HomeView()","        .navigationDestination(HomeDestinations.self)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This also makes using the same destination type with more than one navigation stack a lot easier."}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Note that registering types more than once in the same NavigationStack isn’t recommended and Navigator will in fact warn you if it see multiple registrations of the same type."}],"type":"emphasis"}]},{"level":3,"type":"heading","anchor":"Using-Navigation-Destinations","text":"Using Navigation Destinations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"With that out of the way, Navigation Destinations can be dispatched using a standard SwiftUI "},{"type":"codeVoice","code":"NavigationLink(value:label:)"},{"type":"text","text":" view."}]},{"syntax":"swift","type":"codeListing","code":["NavigationLink(value: HomeDestinations.page3) {","    Text(\"Link to Home Page 3!\")","}"]},{"inlineContent":[{"text":"Or they can be dispatched declaratively using modifiers.","type":"text"}],"type":"paragraph"},{"code":["\/\/ Sample using optional destination","@State var page: SettingsDestinations?","...","Button(\"Modifier Navigate to Page 3!\") {","    page = .page3","}",".navigate(to: $page)","","\/\/ Sample using trigger value","@State var triggerPage3: Bool = false","...","Button(\"Modifier Trigger Page 3!\") {","    triggerPage3.toggle()","}",".navigate(trigger: $triggerPage3, destination: SettingsDestinations.page3)"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Or imperatively by asking a Navigator to perform the desired action.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["@Environment(\\.navigator) var navigator: Navigator","...","Button(\"Button Push Home Page 55\") {","    navigator.push(HomeDestinations.pageN(55))","}","Button(\"Button Navigate To Home Page 55\") {","    navigator.navigate(to: HomeDestinations.pageN(55))","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"In case you’re wondering, calling ","type":"text"},{"code":"push","type":"codeVoice"},{"text":" pushes the associate view onto the current ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"text":", while ","type":"text"},{"code":"Navigate(to:)","type":"codeVoice"},{"type":"text","text":" will push"},{"text":" ","type":"text"},{"text":"the view or present the view, based on the ","type":"text"},{"type":"codeVoice","code":"NavigationMethod"},{"type":"text","text":" specified."}]},{"inlineContent":[{"text":"Speaking of which…","type":"text"}],"type":"paragraph"},{"type":"heading","text":"Navigation Methods","anchor":"Navigation-Methods","level":3},{"type":"paragraph","inlineContent":[{"code":"NavigationDestination","type":"codeVoice"},{"text":" can be extended to provide a distinct ","type":"text"},{"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationMethod","type":"reference","isActive":true},{"type":"text","text":" for each enumerated type."}]},{"type":"codeListing","syntax":"swift","code":["extension HomeDestinations: NavigationDestination {","    public var method: NavigationMethod {","        switch self {","        case .page3:","            .sheet","        default:","            .push","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"In this case, should ","type":"text"},{"type":"codeVoice","code":"navigator.navigate(to: HomeDestinations.page3)"},{"text":" be called, Navigator will automatically present that view in a","type":"text"},{"text":" ","type":"text"},{"text":"sheet. All other views will be pushed onto the navigation stack.","type":"text"}]},{"inlineContent":[{"text":"The current navigation methods are: .push (default), .sheet, .cover, and .send.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Predefined methods can be overridden using Navigator’s ","type":"text"},{"type":"codeVoice","code":"navigate(to:method:)"},{"type":"text","text":" function."}],"type":"paragraph"},{"type":"codeListing","code":["Button(\"Present Home Page 55 Via Sheet\") {","    navigator.navigate(to: HomeDestinations.pageN(55), method: .sheet)","}"],"syntax":"swift"},{"inlineContent":[{"text":"Note that NavigationDestinations dispatched via NavigationLink will ","type":"text"},{"inlineContent":[{"type":"text","text":"always"}],"type":"emphasis"},{"type":"text","text":" push onto the NavigationStack. That’s just how SwiftUI works."}],"type":"paragraph"},{"type":"heading","text":"Values, Not Destinations","anchor":"Values-Not-Destinations","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Navigator is designed to work with "},{"type":"reference","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination","isActive":true},{"text":" types and SwiftUI’s ","type":"text"},{"code":"NavigationLink(value:label:)","type":"codeVoice"},{"type":"text","text":"; not "},{"code":"NavigationLink(destination:label:)","type":"codeVoice"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"Mixing the two on the same ","type":"text"},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":" can lead to unexpected behavior, and using "},{"type":"codeVoice","code":"NavigationLink(destination:label:)"},{"text":" at all can affect programatic navigation using Navigators.","type":"text"}],"type":"paragraph"},{"code":["\/\/ DO","NavigationLink(value: HomeDestinations.page3) {","    Text(\"Link to Home Page 3!\")","}","","\/\/ DON'T DO","NavigationLink(destination: HomePage3View()) {","    Text(\"Link to Home Page 3!\")","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"If you start seeing odd behavior returning to previous views, check to make sure a ","type":"text"},{"type":"codeVoice","code":"NavigationLink(destination:label:)"},{"type":"text","text":" link hasn’t worked its way into your code."}],"type":"paragraph"},{"type":"aside","name":"Important","content":[{"inlineContent":[{"text":"Use NavigationDestination values. Avoid using ","type":"text"},{"type":"codeVoice","code":"NavigationLink(destination:label:)"},{"text":".","type":"text"}],"type":"paragraph"}],"style":"important"}]}],"identifier":{"url":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Destinations","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"NavigatorUI"}],"roleHeading":"Article","title":"Destinations","role":"article"},"kind":"article","abstract":[{"type":"text","text":"All navigation in Navigator is accomplished using enumerated values that conform to the NavigationDestination protocol."}],"seeAlsoSections":[{"anchor":"Related-Documentation","title":"Related Documentation","identifiers":["doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/AdvancedDestinations"]},{"generated":true,"identifiers":["doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationTree","doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Checkpoints","doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Dismissible"],"title":"The Basics","anchor":"The-Basics"}],"sections":[],"references":{"doc://NavigatorUI/documentation/NavigatorUI/AdvancedDestinations":{"abstract":[{"text":"Building NavigationDestinations that access the environment and other use cases","type":"text"}],"kind":"article","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/AdvancedDestinations","title":"Advanced Destinations","role":"article","url":"\/documentation\/navigatorui\/advanceddestinations","type":"topic"},"doc://NavigatorUI/documentation/NavigatorUI/Checkpoints":{"role":"article","type":"topic","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Checkpoints","kind":"article","title":"Checkpoints","abstract":[{"text":"Navigation Checkpoints allow one to return to a specific waypoint in the navigation tree.","type":"text"}],"url":"\/documentation\/navigatorui\/checkpoints"},"doc://NavigatorUI/documentation/NavigatorUI/Dismissible":{"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Dismissible","abstract":[{"type":"text","text":"Understanding dismissible views and their role in application navigation and deep linking."}],"kind":"article","type":"topic","role":"article","url":"\/documentation\/navigatorui\/dismissible","title":"Dismissible Views"},"doc://NavigatorUI/documentation/NavigatorUI":{"type":"topic","url":"\/documentation\/navigatorui","role":"collection","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI","title":"NavigatorUI","abstract":[{"type":"text","text":"Managed NavigationStacks for SwiftUI."}],"kind":"symbol"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationMethod":{"navigatorTitle":[{"kind":"identifier","text":"NavigationMethod"}],"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationMethod","type":"topic","url":"\/documentation\/navigatorui\/navigationmethod","title":"NavigationMethod","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NavigationMethod"}],"abstract":[{"text":"Defines the desired presentation mechanism for a given ","type":"text"},{"code":"NavigationDestination","type":"codeVoice"},{"text":".","type":"text"}]},"doc://NavigatorUI/documentation/NavigatorUI/NavigationTree":{"abstract":[{"type":"text","text":"To get the most out of Navigator you need to understand the navigation tree where its Navigators live."}],"role":"article","type":"topic","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationTree","kind":"article","url":"\/documentation\/navigatorui\/navigationtree","title":"Understanding The Navigation Tree"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationDestination":{"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination","abstract":[{"text":"Provides enumerated navigation types than can be translated into Views.","type":"text"}],"navigatorTitle":[{"text":"NavigationDestination","kind":"identifier"}],"url":"\/documentation\/navigatorui\/navigationdestination","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"NavigationDestination","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","title":"NavigationDestination"}}}