{"metadata":{"role":"article","title":"Destinations","modules":[{"name":"NavigatorUI"}],"roleHeading":"Article"},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"Overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"NavigationDestination types can be used in order to push and present views as needed.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can happen using…"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Standard SwiftUI modifiers like NavigationLink(value:label:).","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Imperatively by asking a Navigator to perform the desired action."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Or via a deep link action enabled by a NavigationURLHander.","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"They’re one of the core elements that make Navigator possible, and they give us the separation of concerns we mentioned earlier.","type":"text"}]},{"anchor":"Defining-Navigation-Destinations","level":3,"type":"heading","text":"Defining Navigation Destinations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Destinations (or routes) are typically just public lists of enumerated values, one for each view desired."}]},{"code":["public enum HomeDestinations {","    case page2","    case page3","    case pageN(Int)","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"SwiftUI requires navigation destination values to be ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":", and so do we. That conformance, however, is satisfied by","type":"text"},{"type":"text","text":" "},{"text":"conforming to the protocol NavigationDestination as shown next.","type":"text"}]},{"type":"heading","anchor":"Defining-Destination-Views","level":3,"text":"Defining Destination Views"},{"inlineContent":[{"text":"Defining our destination views is easy, since NavigationDestination actually conforms to the View protocol!","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"As such, we just extend our destination with a view body that returns the correct view for each case."}],"type":"paragraph"},{"code":["extension HomeDestinations: NavigationDestination {","    public var body: some View {","        switch self {","        case .page2:","            HomePage2View()","        case .page3:","            HomePage3View()","        case .pageN(let value):","            HomePageNView(number: value)","        }","    }","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is a powerful technique that lets Navigator easily create our views whenever or wherever needed. That could be via "},{"code":"NavigationLink(value:label)","type":"codeVoice"},{"type":"text","text":", or presented via a sheet or fullscreen cover."}]},{"inlineContent":[{"type":"text","text":"Note how associated values can be used to pass parameters to views as needed."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"*To build more complex views that have external dependencies or that require access to environmental values, see "},{"isActive":true,"type":"reference","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/AdvancedDestinations"},{"type":"text","text":"."}]},{"anchor":"Registering-Navigation-Destinations","type":"heading","text":"Registering Navigation Destinations","level":3},{"type":"paragraph","inlineContent":[{"text":"Like traditional ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"text":" destination types, ","type":"text"},{"type":"codeVoice","code":"NavigationDestination"},{"type":"text","text":" types need to be registered with the enclosing"},{"text":" ","type":"text"},{"type":"text","text":"navigation stack in order for "},{"code":"navigate(to:)","type":"codeVoice"},{"text":" presentations and standard ","type":"text"},{"code":"NavigationLink(value:label:)","type":"codeVoice"},{"type":"text","text":" transitions"},{"text":" ","type":"text"},{"text":"to work correctly.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"But since each ","type":"text"},{"code":"NavigationDestination","type":"codeVoice"},{"text":" already defines the views to be provided, registering destination types can be done","type":"text"},{"type":"text","text":" "},{"type":"text","text":"using a simple one-line view modifier."}]},{"syntax":"swift","code":["ManagedNavigationStack {","    HomeView()","        .navigationDestination(HomeDestinations.self)","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This also makes using the same destination type with more than one navigation stack a lot easier."}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Note that registering types more than once in the same NavigationStack isn’t recommended and Navigator will in fact warn you if it see multiple registrations of the same type."}],"type":"emphasis"}]},{"text":"Using Navigation Destinations","type":"heading","anchor":"Using-Navigation-Destinations","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"With that out of the way, Navigation Destinations can be dispatched using a standard SwiftUI "},{"type":"codeVoice","code":"NavigationLink(value:label:)"},{"type":"text","text":" view."}]},{"type":"codeListing","code":["NavigationLink(value: HomeDestinations.page3) {","    Text(\"Link to Home Page 3!\")","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Or they can be dispatched declaratively using modifiers.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Sample using optional destination","@State var page: SettingsDestinations?","...","Button(\"Modifier Navigate to Page 3!\") {","    page = .page3","}",".navigate(to: $page)","","\/\/ Sample using trigger value","@State var triggerPage3: Bool = false","...","Button(\"Modifier Trigger Page 3!\") {","    triggerPage3.toggle()","}",".navigate(trigger: $triggerPage3, destination: SettingsDestinations.page3)"]},{"inlineContent":[{"text":"Or imperatively by asking a Navigator to perform the desired action.","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["@Environment(\\.navigator) var navigator: Navigator","...","Button(\"Button Push Home Page 55\") {","    navigator.push(HomeDestinations.pageN(55))","}","Button(\"Button Navigate To Home Page 55\") {","    navigator.navigate(to: HomeDestinations.pageN(55))","}"]},{"inlineContent":[{"text":"In case you’re wondering, calling ","type":"text"},{"type":"codeVoice","code":"push"},{"type":"text","text":" pushes the associate view onto the current "},{"type":"codeVoice","code":"NavigationStack"},{"text":", while ","type":"text"},{"type":"codeVoice","code":"Navigate(to:)"},{"text":" will push","type":"text"},{"type":"text","text":" "},{"text":"the view or present the view, based on the ","type":"text"},{"type":"codeVoice","code":"NavigationMethod"},{"type":"text","text":" specified."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Speaking of which…"}]},{"type":"heading","level":3,"text":"Navigation Methods","anchor":"Navigation-Methods"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"NavigationDestination"},{"type":"text","text":" can be extended to provide a distinct "},{"isActive":true,"type":"reference","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationMethod"},{"type":"text","text":" for each enumerated type."}]},{"type":"codeListing","code":["extension HomeDestinations: NavigationDestination {","    public var method: NavigationMethod {","        switch self {","        case .page3:","            .sheet","        default:","            .push","        }","    }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this case, should "},{"type":"codeVoice","code":"navigator.navigate(to: HomeDestinations.page3)"},{"text":" be called, Navigator will automatically present that view in a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"sheet. All other views will be pushed onto the navigation stack."}]},{"inlineContent":[{"type":"text","text":"The current navigation methods are: .push (default), .sheet, .cover, and .send."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Predefined methods can be overridden using Navigator’s "},{"type":"codeVoice","code":"navigate(to:method:)"},{"text":" function.","type":"text"}],"type":"paragraph"},{"code":["Button(\"Present Home Page 55 Via Sheet\") {","    navigator.navigate(to: HomeDestinations.pageN(55), method: .sheet)","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Note that NavigationDestinations dispatched via NavigationLink will "},{"inlineContent":[{"text":"always","type":"text"}],"type":"emphasis"},{"text":" push onto the NavigationStack. That’s just how SwiftUI works.","type":"text"}],"type":"paragraph"},{"type":"heading","anchor":"Values-Not-Destinations","level":2,"text":"Values, Not Destinations"},{"type":"paragraph","inlineContent":[{"text":"Navigator is designed to work with ","type":"text"},{"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination","isActive":true,"type":"reference"},{"type":"text","text":" types and SwiftUI’s "},{"type":"codeVoice","code":"NavigationLink(value:label:)"},{"text":"; not ","type":"text"},{"code":"NavigationLink(destination:label:)","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Mixing the two on the same "},{"type":"codeVoice","code":"NavigationStack"},{"text":" can lead to unexpected behavior, and using ","type":"text"},{"type":"codeVoice","code":"NavigationLink(destination:label:)"},{"type":"text","text":" at all can affect programatic navigation using Navigators."}]},{"code":["\/\/ DO","NavigationLink(value: HomeDestinations.page3) {","    Text(\"Link to Home Page 3!\")","}","","\/\/ DON'T DO","NavigationLink(destination: HomePage3View()) {","    Text(\"Link to Home Page 3!\")","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you start seeing odd behavior returning to previous views, check to make sure a "},{"type":"codeVoice","code":"NavigationLink(destination:label:)"},{"type":"text","text":" link hasn’t worked its way into your code."}]},{"name":"Important","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use NavigationDestination values. Avoid using "},{"type":"codeVoice","code":"NavigationLink(destination:label:)"},{"type":"text","text":"."}]}],"type":"aside"}]}],"hierarchy":{"paths":[["doc:\/\/NavigatorUI\/documentation\/NavigatorUI","doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Navigator"]]},"identifier":{"url":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Destinations","interfaceLanguage":"swift"},"seeAlsoSections":[{"anchor":"Related-Documentation","title":"Related Documentation","identifiers":["doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/AdvancedDestinations"]},{"title":"The Basics","identifiers":["doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationTree","doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Checkpoints","doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Dismissible"],"generated":true,"anchor":"The-Basics"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/navigatorui\/destinations"]}],"kind":"article","schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"abstract":[{"type":"text","text":"All navigation in Navigator is accomplished using enumerated values that conform to the NavigationDestination protocol."}],"references":{"doc://NavigatorUI/documentation/NavigatorUI/NavigationDestination":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NavigationDestination"}],"type":"topic","abstract":[{"type":"text","text":"Provides enumerated navigation types than can be translated into Views."}],"navigatorTitle":[{"text":"NavigationDestination","kind":"identifier"}],"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination","title":"NavigationDestination","url":"\/documentation\/navigatorui\/navigationdestination"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationMethod":{"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationMethod","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NavigationMethod"}],"title":"NavigationMethod","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NavigationMethod"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Defines the desired presentation mechanism for a given ","type":"text"},{"type":"codeVoice","code":"NavigationDestination"},{"text":".","type":"text"}],"url":"\/documentation\/navigatorui\/navigationmethod"},"doc://NavigatorUI/documentation/NavigatorUI/Dismissible":{"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Dismissible","role":"article","type":"topic","abstract":[{"text":"Understanding dismissible views and their role in application navigation and deep linking.","type":"text"}],"url":"\/documentation\/navigatorui\/dismissible","title":"Dismissible Views","kind":"article"},"doc://NavigatorUI/documentation/NavigatorUI":{"role":"collection","type":"topic","abstract":[],"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI","url":"\/documentation\/navigatorui","kind":"symbol","title":"NavigatorUI"},"doc://NavigatorUI/documentation/NavigatorUI/Navigator":{"kind":"symbol","abstract":[{"text":"Every ManagedNavigationStack has a Navigator to manage it.","type":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/navigatorui\/navigator","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Navigator"}],"navigatorTitle":[{"kind":"identifier","text":"Navigator"}],"title":"Navigator","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Navigator"},"doc://NavigatorUI/documentation/NavigatorUI/Checkpoints":{"url":"\/documentation\/navigatorui\/checkpoints","abstract":[{"type":"text","text":"Navigation Checkpoints allow one to return to a specific waypoint in the navigation tree."}],"kind":"article","title":"Checkpoints","role":"article","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Checkpoints","type":"topic"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationTree":{"url":"\/documentation\/navigatorui\/navigationtree","kind":"article","role":"article","title":"Understanding The Navigation Tree","type":"topic","abstract":[{"text":"To get the most out of Navigator you need to understand the navigation tree where its Navigators live.","type":"text"}],"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationTree"},"doc://NavigatorUI/documentation/NavigatorUI/AdvancedDestinations":{"title":"Advanced Destinations","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/AdvancedDestinations","type":"topic","kind":"article","url":"\/documentation\/navigatorui\/advanceddestinations","abstract":[{"type":"text","text":"Building NavigationDestinations that access the environment and other use cases"}],"role":"article"}}}