{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"send"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"values","kind":"internalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"kind":"text","text":"...)"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"This is the core functionality behind deep linking support in Navigator.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The primary difference between this and ","type":"text"},{"type":"codeVoice","code":"navigate(to:)"},{"type":"text","text":" is that you don’t need to know what navigator is handling"},{"type":"text","text":" "},{"type":"text","text":"the request, nor does the value need to be of type "},{"type":"reference","isActive":true,"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"They just need to be ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]},{"level":3,"text":"Sending Values","anchor":"Sending-Values","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The following code broadcasts a list of actions to be handled somewhere in the application. First it selects the Home tab,","type":"text"},{"type":"text","text":" "},{"text":"then navigates to Page 2.","type":"text"}]},{"code":["Button(\"Go To Tab Home, Page 2\") {","    navigator.send(","        RootTabs.home,","        HomeDestinations.page2","    )","}"],"syntax":"swift","type":"codeListing"},{"text":"Receiving Values","type":"heading","level":3,"anchor":"Receiving-Values"},{"type":"paragraph","inlineContent":[{"text":"Receiving values is simple. Just register a receive handler for the desired type.","type":"text"}]},{"type":"codeListing","code":[".onNavigationReceive { (tab: RootTabs) in","    if tab == selectedTab {","        return .immediately","    }","    selectedTab = tab","    return .auto","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"And then perform whatever action is needed on receipt.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here’s the handler for "},{"type":"codeVoice","code":"HomeDestinations"},{"type":"text","text":".`"}]},{"type":"codeListing","code":[".onNavigationReceive { (destination: HomeDestinations, navigator) in","    navigator.navigate(to: destination)","    return .auto","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Speaking of which, receive handlers return a value of type "},{"isActive":true,"type":"reference","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationReceiveResumeType"},{"text":", which tells Navigator how to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"process the remaining values in the queue. Additional values can be paused, cancelled, or simply processed normally."}]},{"type":"paragraph","inlineContent":[{"text":"Note that there should be one and only one registered handler for a given type in the navigation tree. If more than","type":"text"},{"type":"text","text":" "},{"text":"one exists the first handler will consume the value and the remaining handlers should be ignored.","type":"text"}]}]}],"abstract":[{"type":"text","text":"Sends a value or values to navigation receivers throughout the application."}],"metadata":{"symbolKind":"method","externalID":"s:11NavigatorUI0A0V4sendyySH_pd_tF","extendedModule":"NavigatorUI","title":"send(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"send","kind":"identifier"},{"text":"(any ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"text":"...)","kind":"text"}],"roleHeading":"Instance Method","modules":[{"name":"NavigatorUI"}],"role":"symbol"},"hierarchy":{"paths":[["doc:\/\/NavigatorUI\/documentation\/NavigatorUI","doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Navigator"]]},"identifier":{"url":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Navigator\/send(_:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/navigatorui\/navigator\/send(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://NavigatorUI/documentation/NavigatorUI":{"url":"\/documentation\/navigatorui","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI","role":"collection","kind":"symbol","abstract":[{"text":"Managed NavigationStacks for SwiftUI.","type":"text"}],"title":"NavigatorUI","type":"topic"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationReceiveResumeType":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationReceiveResumeType","url":"\/documentation\/navigatorui\/navigationreceiveresumetype","title":"NavigationReceiveResumeType","navigatorTitle":[{"kind":"identifier","text":"NavigationReceiveResumeType"}],"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"NavigationReceiveResumeType","kind":"identifier"}],"abstract":[]},"doc://NavigatorUI/documentation/NavigatorUI/Navigator":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Navigator","kind":"identifier"}],"type":"topic","kind":"symbol","title":"Navigator","abstract":[{"text":"Every ManagedNavigationStack has a Navigator to manage it.","type":"text"}],"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Navigator","navigatorTitle":[{"kind":"identifier","text":"Navigator"}],"role":"symbol","url":"\/documentation\/navigatorui\/navigator"},"doc://NavigatorUI/documentation/NavigatorUI/Navigator/send(_:)":{"abstract":[{"type":"text","text":"Sends a value or values to navigation receivers throughout the application."}],"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Navigator\/send(_:)","kind":"symbol","url":"\/documentation\/navigatorui\/navigator\/send(_:)","role":"symbol","type":"topic","title":"send(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"send","kind":"identifier"},{"text":"(any ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"text":"...)","kind":"text"}]},"doc://NavigatorUI/documentation/NavigatorUI/NavigationDestination":{"role":"symbol","url":"\/documentation\/navigatorui\/navigationdestination","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NavigationDestination","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Provides enumerated navigation types than can be translated into Views.","type":"text"}],"title":"NavigationDestination","navigatorTitle":[{"text":"NavigationDestination","kind":"identifier"}]}}}